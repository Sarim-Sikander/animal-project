version: "3.9"
networks:
  airflow:
    driver: bridge

services:
  animals-api:
    image: lp-programming-challenge-1
    ports:
      - "3123:3123"
    networks:
      - airflow
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:3123/animals/v1/animals?page=1"]
      interval: 30s
      timeout: 10s
      retries: 5

  mysqldb:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: airflow
    container_name: mysql_container_test
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 3308:3306
    networks:
      - airflow
    deploy:
      restart_policy:
        condition: always
      resources:
        limits:
          memory: 2G
          cpus: '1.0'

  redis:
    image: redis:latest
    container_name: airflow_redis
    ports:
      - "6378:6379"
    networks:
      - airflow
    deploy:
      restart_policy:
        condition: always
      resources:
        limits:
          memory: 1G
          cpus: '0.5'

  initdb:
    image: airflow-project:latest
    env_file:
      - airflow.env
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./test:/opt/airflow/test
      - ./utils:/opt/airflow/utils
      - ./config:/opt/airflow/config
      - ./plugins:/opt/airflow/plugins
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint: /bin/bash
    command: -c "airflow db init && airflow db migrate && airflow users create --firstname admin --lastname admin --email admin --password admin --username admin --role Admin"
    depends_on:
      - mysqldb
      - redis
    deploy:
      restart_policy:
        condition: on-failure
        delay: 8s
        max_attempts: 5
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
    networks:
      - airflow

  webserver:
    env_file:
      - airflow.env
    restart: always
    image: airflow-project:latest
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "8081:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./test:/opt/airflow/test
      - ./utils:/opt/airflow/utils
      - ./config:/opt/airflow/config
      - ./plugins:/opt/airflow/plugins
      - /var/run/docker.sock:/var/run/docker.sock
    command: webserver
    depends_on:
      - initdb
      - mysqldb
      - redis
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
    healthcheck:
      test: ["CMD-SHELL", "[ -f /opt/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - airflow

  scheduler:
    image: airflow-project:latest
    healthcheck:
      test: ["CMD-SHELL", "airflow jobs check --job-type SchedulerJob --hostname $(hostname)"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always
    env_file:
      - airflow.env
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./test:/opt/airflow/test
      - ./utils:/opt/airflow/utils
      - ./config:/opt/airflow/config
      - ./plugins:/opt/airflow/plugins
      - /var/run/docker.sock:/var/run/docker.sock
    command: scheduler
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - initdb
      - mysqldb
      - redis
    deploy:
      restart_policy:
        condition: always
        delay: 5s
        window: 120s
      resources:
        reservations:
          memory: 1G
          cpus: '0.5'
        limits:
          memory: 4G
          cpus: '2.0'
    networks:
      - airflow

  worker:
    image: airflow-project:latest
    restart: always
    env_file:
      - airflow.env
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./test:/opt/airflow/test
      - ./utils:/opt/airflow/utils
      - ./config:/opt/airflow/config
      - ./plugins:/opt/airflow/plugins
      - /var/run/docker.sock:/var/run/docker.sock
    command: celery worker
    depends_on:
      - initdb
      - mysqldb
      - redis
    extra_hosts:
      - "host.docker.internal:host-gateway"
    deploy:
      restart_policy:
        condition: always
        delay: 5s
        window: 120s
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
    networks:
      - airflow
